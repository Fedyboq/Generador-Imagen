{
  "/home/ubuntu/locura/serverless.yml": {
    "versionFramework": "4.17.1",
    "servicePath": "/home/ubuntu/locura/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "m4guiluch0",
      "service": "diagrams-lambda",
      "provider": {
        "name": "aws",
        "region": "us-east-1",
        "timeout": 30,
        "iam": {
          "role": "arn:aws:iam::195602400559:role/LabRole"
        },
        "ecr": {
          "images": {
            "diagramscontainer": {
              "path": "."
            }
          }
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ApiLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/diagrams-lambda-dev-api"
              }
            },
            "ApiLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "ImageUri": "195602400559.dkr.ecr.us-east-1.amazonaws.com/serverless-diagrams-lambda-dev@sha256:da845e708d7f7e94d5069ce88ac45dc365fd8b1f82217f3cfa89b6114baf322c"
                },
                "PackageType": "Image",
                "FunctionName": "diagrams-lambda-dev-api",
                "MemorySize": 1024,
                "Timeout": 30,
                "Role": "arn:aws:iam::195602400559:role/LabRole"
              },
              "DependsOn": [
                "ApiLogGroup"
              ]
            },
            "ApiLambdaVersionecHzk09kg3ZZ8qK7iO9FKZrYbjPm3cwmc7NuNY1IccM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ApiLambdaFunction"
                },
                "CodeSha256": "da845e708d7f7e94d5069ce88ac45dc365fd8b1f82217f3cfa89b6114baf322c"
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-diagrams-lambda",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "ApiLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ApiLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationApi": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "ApiLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostDiagram": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /diagram",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationApi"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationApi"
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-bed8f6ad-5b39",
              "Export": {
                "Name": "sls-diagrams-lambda-dev-ServerlessDeploymentBucketName"
              }
            },
            "ApiLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ApiLambdaVersionecHzk09kg3ZZ8qK7iO9FKZrYbjPm3cwmc7NuNY1IccM"
              },
              "Export": {
                "Name": "sls-diagrams-lambda-dev-ApiLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-diagrams-lambda-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-diagrams-lambda-dev-HttpApiUrl"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "api": {
          "image": {
            "name": "diagramscontainer"
          },
          "events": [
            {
              "httpApi": {
                "path": "/diagram",
                "method": "post"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/diagram"
            }
          ],
          "name": "diagrams-lambda-dev-api",
          "package": {},
          "memory": 1024,
          "timeout": 30,
          "vpc": {},
          "versionLogicalId": "ApiLambdaVersionecHzk09kg3ZZ8qK7iO9FKZrYbjPm3cwmc7NuNY1IccM"
        }
      }
    },
    "provider": {
      "name": "aws",
      "region": "us-east-1",
      "timeout": 30,
      "iam": {
        "role": "arn:aws:iam::195602400559:role/LabRole"
      },
      "ecr": {
        "images": {
          "diagramscontainer": {
            "path": "."
          }
        }
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/diagrams-lambda-dev-api"
            }
          },
          "ApiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "ImageUri": "195602400559.dkr.ecr.us-east-1.amazonaws.com/serverless-diagrams-lambda-dev@sha256:da845e708d7f7e94d5069ce88ac45dc365fd8b1f82217f3cfa89b6114baf322c"
              },
              "PackageType": "Image",
              "FunctionName": "diagrams-lambda-dev-api",
              "MemorySize": 1024,
              "Timeout": 30,
              "Role": "arn:aws:iam::195602400559:role/LabRole"
            },
            "DependsOn": [
              "ApiLogGroup"
            ]
          },
          "ApiLambdaVersionecHzk09kg3ZZ8qK7iO9FKZrYbjPm3cwmc7NuNY1IccM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiLambdaFunction"
              },
              "CodeSha256": "da845e708d7f7e94d5069ce88ac45dc365fd8b1f82217f3cfa89b6114baf322c"
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-diagrams-lambda",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "ApiLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApiLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationApi": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "ApiLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostDiagram": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /diagram",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationApi"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationApi"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-bed8f6ad-5b39",
            "Export": {
              "Name": "sls-diagrams-lambda-dev-ServerlessDeploymentBucketName"
            }
          },
          "ApiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiLambdaVersionecHzk09kg3ZZ8qK7iO9FKZrYbjPm3cwmc7NuNY1IccM"
            },
            "Export": {
              "Name": "sls-diagrams-lambda-dev-ApiLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-diagrams-lambda-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-diagrams-lambda-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "org: m4guiluch0\nservice: diagrams-lambda\nprovider:\n  name: aws\n  region: us-east-1\n  timeout: 30\n  iam:\n    role: arn:aws:iam::195602400559:role/LabRole\n\n  ecr:\n    images:\n      diagramscontainer:      # nombre en minúsculas y sin mayúsculas\n        path: .\nfunctions:\n  api:\n    image:\n      name: diagramscontainer\n    events:\n      - httpApi:\n          path: /diagram\n          method: post   # <-- aquí lo cambias a POST\n\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "617b9de3-61e0-468c-9ef8-f494f6d2adef",
    "orgName": "m4guiluch0",
    "userId": "LMV661ycM9cM36Df54",
    "userName": "m4guiluch0",
    "serviceProviderAwsAccountId": "195602400559",
    "serviceProviderAwsCfStackName": "diagrams-lambda-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:195602400559:stack/diagrams-lambda-dev/0f6b3ce0-4f8b-11f0-9e8d-1218abee3647",
    "serviceProviderAwsCfStackCreated": "2025-06-22T17:05:12.768Z",
    "serviceProviderAwsCfStackUpdated": "2025-06-22T17:13:37.600Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "ApiLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:195602400559:function:diagrams-lambda-dev-api:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-diagrams-lambda-dev-ApiLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "du8u287sjk",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-diagrams-lambda-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-bed8f6ad-5b39",
        "ExportName": "sls-diagrams-lambda-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://du8u287sjk.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-diagrams-lambda-dev-HttpApiUrl"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "ApiLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/diagrams-lambda-dev-api"
          }
        },
        "ApiLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "ImageUri": "195602400559.dkr.ecr.us-east-1.amazonaws.com/serverless-diagrams-lambda-dev@sha256:da845e708d7f7e94d5069ce88ac45dc365fd8b1f82217f3cfa89b6114baf322c"
            },
            "PackageType": "Image",
            "FunctionName": "diagrams-lambda-dev-api",
            "MemorySize": 1024,
            "Timeout": 30,
            "Role": "arn:aws:iam::195602400559:role/LabRole"
          },
          "DependsOn": [
            "ApiLogGroup"
          ]
        },
        "ApiLambdaVersionecHzk09kg3ZZ8qK7iO9FKZrYbjPm3cwmc7NuNY1IccM": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "ApiLambdaFunction"
            },
            "CodeSha256": "da845e708d7f7e94d5069ce88ac45dc365fd8b1f82217f3cfa89b6114baf322c"
          }
        },
        "HttpApi": {
          "Type": "AWS::ApiGatewayV2::Api",
          "Properties": {
            "Name": "dev-diagrams-lambda",
            "ProtocolType": "HTTP"
          }
        },
        "HttpApiStage": {
          "Type": "AWS::ApiGatewayV2::Stage",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "StageName": "$default",
            "AutoDeploy": true,
            "DefaultRouteSettings": {
              "DetailedMetricsEnabled": false
            }
          }
        },
        "ApiLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "ApiLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationApi": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "ApiLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRoutePostDiagram": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "POST /diagram",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationApi"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationApi"
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-us-east-1-bed8f6ad-5b39",
          "Export": {
            "Name": "sls-diagrams-lambda-dev-ServerlessDeploymentBucketName"
          }
        },
        "ApiLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "ApiLambdaVersionecHzk09kg3ZZ8qK7iO9FKZrYbjPm3cwmc7NuNY1IccM"
          },
          "Export": {
            "Name": "sls-diagrams-lambda-dev-ApiLambdaFunctionQualifiedArn"
          }
        },
        "HttpApiId": {
          "Description": "Id of the HTTP API",
          "Value": {
            "Ref": "HttpApi"
          },
          "Export": {
            "Name": "sls-diagrams-lambda-dev-HttpApiId"
          }
        },
        "HttpApiUrl": {
          "Description": "URL of the HTTP API",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "HttpApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                }
              ]
            ]
          },
          "Export": {
            "Name": "sls-diagrams-lambda-dev-HttpApiUrl"
          }
        }
      }
    }
  }
}